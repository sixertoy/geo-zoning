{"version":3,"sources":["Loader.jsx","marker-icon.js","App.js","index.js"],"names":["Loader","className","viewBox","cx","cy","r","fill","strokeWidth","MarkerIcon","Leaflet","divIcon","html","App","useZoomControl","useState","coords","setCoords","mapCenter","setMapCenter","isVisible","setCircleVisibility","useEffect","navigator","geolocation","getCurrentPosition","position","nextCoords","lat","latitude","lng","longitude","id","Map","zoom","minZoom","maxZoom","center","zoomControl","TileLayer","attribution","url","Circle","radius","Marker","draggable","icon","onMoveEnd","target","getLatLng","onMoveStart","ZoomControl","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAQgBA,EAND,kBACb,yBAAKC,UAAU,UAAUC,QAAQ,aAC/B,4BAAQD,UAAU,OAAOE,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,OAAOC,YAAY,Q,OCU7DC,E,OAZIC,EAAQC,QAAQ,CACjCT,UAAW,yBACXU,KAAK,iOCYDC,EAAM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EACNC,mBAAS,MADH,mBAC3BC,EAD2B,KACnBC,EADmB,OAEAF,mBAAS,MAFT,mBAE3BG,EAF2B,KAEhBC,EAFgB,OAGOJ,oBAAS,GAHhB,mBAG3BK,EAH2B,KAGhBC,EAHgB,KAclC,OAVAC,qBAAU,WACHN,GAAWE,IAAaK,UAAUC,aACrCD,UAAUC,YAAYC,oBAAmB,SAACC,GAAc,IAAD,EACXA,EAASV,OAC7CW,EAAa,CAAEC,IAFgC,EAC7CC,SACkBC,IAF2B,EAC9BC,WAEvBZ,EAAaQ,GACbV,EAAUU,SAIXX,GAAWE,EAEd,yBAAKc,GAAG,iBACN,kBAACC,EAAA,EAAD,CACEC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTC,OAAQnB,EACRoB,YAAaxB,GAMb,kBAACyB,EAAA,EAAD,CAAWC,YAAa,kBAAmBC,IA9BjC,uDA+BTrB,GAAa,kBAACsB,EAAA,EAAD,CAAQC,OAhCT,IAgC+BN,OAAQrB,IACpD,kBAAC4B,EAAA,EAAD,CAAQC,WAAS,EACjBC,KAAMrC,EACNiB,SAAUV,EACV+B,UAAW,YAAiB,IACpBpB,EADmB,EAAbqB,OACcC,YAC1BhC,EAAUU,GACVN,GAAoB,IAEtB6B,YAAa,kBAAM7B,GAAoB,MACtCP,GAAkB,kBAACqC,EAAA,EAAD,CAAazB,SAAS,eAzBb,kBAAC,EAAD,OA+BpCb,EAAIuC,aAAe,CACjBtC,gBAAgB,GAOHD,QC9DfwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.11d12cf6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = () => (\n  <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n    <circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\" />\n  </svg>\n);\n\nexport default (Loader);\n","import Leaflet from \"leaflet\";\n\nconst MarkerIcon = Leaflet.divIcon({\n  className: \"leaflet-marker-divicon\",\n  html: `\n<div class=\"leaflet-marker-divicon-container\">\n  <div class=\"leaflet-marker-divicon-inner\">\n    <div class=\"leaflet-marker-divicon-pin\"></div>\n    <div class=\"leaflet-marker-divicon-pulse\"></div>\n  </div>\n</div>\n`\n});\n\nexport default MarkerIcon;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Map,\n  Marker,\n  Circle,\n  TileLayer,\n  ZoomControl\n} from \"react-leaflet\";\n\nimport Loader from './Loader';\nimport MarkerIcon from './marker-icon';\n\nconst RADIUS_METER = 100000;\nconst OSM_LAYER = \"http://a.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\";\n\nconst App = ({ useZoomControl }) => {\n  const [coords, setCoords] = useState(null);\n  const [mapCenter, setMapCenter] = useState(null);\n  const [isVisible, setCircleVisibility] = useState(true);\n  useEffect(() => {\n    if (!coords && !mapCenter && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude: lat, longitude: lng } = position.coords\n        const nextCoords = { lat, lng };\n        setMapCenter(nextCoords);\n        setCoords(nextCoords);\n      });\n    }\n  })\n  if (!coords || !mapCenter) return <Loader />;\n  return (\n    <div id=\"app-container\">\n      <Map\n        zoom={9}\n        minZoom={1}\n        maxZoom={17}\n        center={mapCenter}\n        zoomControl={useZoomControl}\n        // maxBounds={[\n        //   [44.077884090674495, 7.261531242479236],\n        //   [42.8374637590877, 5.342847062564374]\n        // ]}\n      >\n        <TileLayer attribution={\"Open Street Map\"} url={OSM_LAYER} />\n        {isVisible && <Circle radius={RADIUS_METER} center={coords} />}\n        <Marker draggable\n        icon={MarkerIcon}\n        position={coords}\n        onMoveEnd={({ target }) => {\n          const nextCoords = target.getLatLng();\n          setCoords(nextCoords);\n          setCircleVisibility(true);\n        }}\n        onMoveStart={() => setCircleVisibility(false)} />\n        {useZoomControl && <ZoomControl position=\"topright\" />}\n      </Map>\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  useZoomControl: false\n};\n\nApp.propTypes = {\n  useZoomControl: PropTypes.bool\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./index.css\";\nimport \"./leaflet-div-icon.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}