{"version":3,"sources":["marker-icon.js","App.js","index.js"],"names":["MarkerIcon","Leaflet","divIcon","className","html","PARIS_CENTER","App","useZoomControl","mapElement","useRef","useState","isVisible","setCircleVisibility","lat","lng","coords","setCoords","id","Map","zoom","minZoom","maxZoom","ref","center","zoomControl","TileLayer","attribution","url","Circle","radius","Marker","draggable","icon","position","onMoveEnd","nextCoords","target","getLatLng","onMoveStart","ZoomControl","Helmet","rel","href","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAceA,E,OAZIC,EAAQC,QAAQ,CACjCC,UAAW,yBACXC,KAAK,iOCaDC,EAAe,CAAC,kBAAmB,mBAEnCC,EAAM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACPC,EAAaC,iBAAO,MADQ,EAEOC,oBAAS,GAFhB,mBAE3BC,EAF2B,KAEhBC,EAFgB,OAGNF,mBAAS,CAACG,IAAK,UAAWC,IAAK,WAHzB,mBAG3BC,EAH2B,KAGnBC,EAHmB,KAIlC,OACE,yBAAKC,GAAG,iBACN,kBAACC,EAAA,EAAD,CACEC,KAAM,EACNC,QAAS,EACTC,QAAS,GACTC,IAAKd,EACLe,OAAQlB,EACRmB,YAAajB,GAMb,kBAACkB,EAAA,EAAD,CAAWC,YAAa,kBAAmBC,IAvBjC,uDAwBThB,GAAa,kBAACiB,EAAA,EAAD,CAAQC,OAzBT,IAyB+BN,OAAQR,IACpD,kBAACe,EAAA,EAAD,CAAQC,WAAS,EACfC,KAAMhC,EACNiC,SAAUlB,EACVmB,UAAW,YAAiB,IACpBC,EADmB,EAAbC,OACcC,YAC1BrB,EAAUmB,GACVvB,GAAoB,IAEtB0B,YAAa,kBAAM1B,GAAoB,MACxCL,GAAkB,kBAACgC,EAAA,EAAD,CAAaN,SAAS,cAE3C,kBAACO,EAAA,EAAD,KACE,0BAAMC,IAAI,aAAaC,KApCX,wDA0CpBpC,EAAIqC,aAAe,CACjBpC,gBAAgB,GAOHD,QC1DfsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4b7fc638.chunk.js","sourcesContent":["import Leaflet from \"leaflet\";\n\nconst MarkerIcon = Leaflet.divIcon({\n  className: \"leaflet-marker-divicon\",\n  html: `\n<div class=\"leaflet-marker-divicon-container\">\n  <div class=\"leaflet-marker-divicon-inner\">\n    <div class=\"leaflet-marker-divicon-pin\"></div>\n    <div class=\"leaflet-marker-divicon-pulse\"></div>\n  </div>\n</div>\n`\n});\n\nexport default MarkerIcon;\n","import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Map,\n  Marker,\n  Circle,\n  TileLayer,\n  ZoomControl\n} from \"react-leaflet\";\n\nimport MarkerIcon from './marker-icon';\n\nconst RADIUS_METER = 100000;\nconst OSM_LAYER = \"http://a.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\nconst LEAFLET_CSS = \"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\"\n\nconst PARIS_CENTER = [43.39528702235596, 6.294845731267186]\n\nconst App = ({ useZoomControl }) => {\n  const mapElement = useRef(null);\n  const [isVisible, setCircleVisibility] = useState(true);\n  const [coords, setCoords] = useState({lat: 43.040845, lng: 6.145118});\n  return (\n    <div id=\"app-container\">\n      <Map\n        zoom={9}\n        minZoom={1}\n        maxZoom={17}\n        ref={mapElement}\n        center={PARIS_CENTER}\n        zoomControl={useZoomControl}\n        // maxBounds={[\n        //   [44.077884090674495, 7.261531242479236],\n        //   [42.8374637590877, 5.342847062564374]\n        // ]}\n      >\n        <TileLayer attribution={\"Open Street Map\"} url={OSM_LAYER} />\n        {isVisible && <Circle radius={RADIUS_METER} center={coords} />}\n        <Marker draggable\n          icon={MarkerIcon}\n          position={coords}\n          onMoveEnd={({ target }) => {\n            const nextCoords = target.getLatLng();\n            setCoords(nextCoords);\n            setCircleVisibility(true);\n          }}\n          onMoveStart={() => setCircleVisibility(false)} />\n        {useZoomControl && <ZoomControl position=\"topright\" />}\n      </Map>\n      <Helmet>\n        <link rel=\"stylesheet\" href={LEAFLET_CSS} />\n      </Helmet>\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  useZoomControl: false\n};\n\nApp.propTypes = {\n  useZoomControl: PropTypes.bool\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./index.css\";\nimport \"./leaflet-div-icon.css\";\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}