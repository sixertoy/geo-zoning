{"version":3,"sources":["components/MarkerIcon.jsx","components/GeoMap.jsx","components/Loader.jsx","components/Welcome.jsx","App.jsx","index.js"],"names":["MarkerIcon","Leaflet","divIcon","className","html","useStyles","createUseStyles","container","composes","zIndex","GeoMap","center","useZoomControl","clases","useState","coords","setCoords","isVisible","setCircleVisibility","Map","maxZoom","minZoom","zoom","zoomControl","onClick","latlng","TileLayer","attribution","url","Circle","radius","Marker","draggable","icon","position","onMoveEnd","nextCoords","target","getLatLng","onMoveStart","ZoomControl","defaultProps","Loader","viewBox","cx","cy","r","fill","strokeWidth","button","backgroundColor","borderRadius","color","margin","padding","width","controls","marginTop","disclaimer","help","fontSize","opacity","message","paf","marginBottom","title","wrapper","textAlign","Welcome","onClickHandler","classes","id","style","type","PARIS_CENTER","lat","lng","version","bottom","left","App","mapCenter","setMapCenter","isClicked","setIsClicked","useGeoloc","navigator","geolocation","getCurrentPosition","latitude","longitude","enableHighAccuracy","timeout","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a07b3c6.chunk.js","sourcesContent":["import Leaflet from \"leaflet\";\n\nconst MarkerIcon = Leaflet.divIcon({\n  className: \"leaflet-marker-divicon\",\n  html: `\n<div class=\"leaflet-marker-divicon-container\">\n  <div class=\"leaflet-marker-divicon-inner\">\n    <div class=\"leaflet-marker-divicon-pin\"></div>\n    <div class=\"leaflet-marker-divicon-pulse\"></div>\n  </div>\n</div>\n`\n});\n\nexport default MarkerIcon;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Circle, Map, Marker, TileLayer, ZoomControl } from 'react-leaflet';\n\nimport MarkerIcon from './MarkerIcon';\n\nconst RADIUS_METER = 100000;\nconst OSM_LAYER = 'http://a.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png';\n\nconst useStyles = createUseStyles({\n  container: {\n    composes: ['is-full-layout'],\n    zIndex: 999999,\n  },\n});\n\nconst GeoMap = ({ center, useZoomControl }) => {\n  const clases = useStyles();\n  const [coords, setCoords] = useState(center);\n  const [isVisible, setCircleVisibility] = useState(true);\n  return (\n    <div className={clases.container}>\n      <Map\n        center={center}\n        maxZoom={17}\n        minZoom={1}\n        zoom={9}\n        zoomControl={false}\n        onClick={({ latlng }) => setCoords(latlng)}>\n        <TileLayer attribution=\"Open Street Map\" url={OSM_LAYER} />\n        {isVisible && <Circle center={coords} radius={RADIUS_METER} />}\n        <Marker\n          draggable\n          icon={MarkerIcon}\n          position={coords}\n          onMoveEnd={({ target }) => {\n            const nextCoords = target.getLatLng();\n            setCoords(nextCoords);\n            setCircleVisibility(true);\n          }}\n          onMoveStart={() => setCircleVisibility(false)}\n        />\n        {useZoomControl && <ZoomControl position=\"topright\" />}\n      </Map>\n    </div>\n  );\n};\n\nGeoMap.defaultProps = {\n  useZoomControl: true,\n};\n\nGeoMap.propTypes = {\n  center: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n  }).isRequired,\n  useZoomControl: PropTypes.bool,\n};\n\nexport default GeoMap;\n","import React from 'react';\n\nconst Loader = () => (\n  <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n    <circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\" />\n  </svg>\n);\n\nexport default (Loader);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  button: {\n    backgroundColor: '#000',\n    borderRadius: 4,\n    color: '#FFFFFF',\n    composes: ['is-bold'],\n    margin: 12,\n    padding: '12px 24px',\n    width: 120,\n  },\n  container: {\n    color: '#FFFFFF',\n    composes: ['flex-rows', 'flex-center', 'items-center'],\n    padding: 35,\n    position: 'relative',\n  },\n  controls: {\n    composes: ['flex-columns', 'flex-center'],\n    marginTop: 20,\n  },\n  disclaimer: {\n    composes: ['is-bold'],\n    marginTop: 36,\n  },\n  help: {\n    fontSize: '0.85rem',\n    marginTop: 20,\n    opacity: 0.45,\n  },\n  message: {\n    fontSize: '1.2rem',\n    marginTop: 40,\n  },\n  paf: {\n    composes: ['is-italic'],\n    marginBottom: 12,\n  },\n  title: {\n    composes: ['is-bold'],\n  },\n  wrapper: {\n    textAlign: 'center',\n  },\n});\n\nconst Welcome = ({ onClickHandler }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} id=\"welcome\">\n      <div className={classes.wrapper}>\n        <h2 className={classes.title}>\n          <span>COVID19</span>\n        </h2>\n        <h1 className={classes.title}>\n          <span>Zone 100KM</span>\n        </h1>\n        <div className={classes.message}>\n          <p>\n            <span>\n              Souhaitez-vous utiliser la géolocalisation de votre téléphone ?\n            </span>\n          </p>\n        </div>\n        <div className={classes.controls}>\n          <div>\n            <button\n              className={classes.button}\n              style={{ backgroundColor: '#73C990' }}\n              type=\"button\"\n              onClick={() => onClickHandler(true)}>\n              <span>Oui</span>\n              <sup>*</sup>\n            </button>\n            <button\n              className={classes.button}\n              style={{ backgroundColor: '#E06C75' }}\n              type=\"button\"\n              onClick={() => onClickHandler(false)}>\n              <span>Non</span>\n            </button>\n          </div>\n        </div>\n        <div className={classes.help}>\n          <p className={classes.paf}>\n            <sup>*</sup>&nbsp;\n            <span>\n              La géolocation doit être activée dans les préférences de votre\n              device\n            </span>\n          </p>\n          <p className={classes.paf}>\n            Utiliser la molette de votre souris pour zoomer/dézoomer sur la\n            carte\n          </p>\n          <p className={classes.disclaimer}>\n            Cette application ne stocke aucunes de vos informations personelles\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWelcome.propTypes = {\n  onClickHandler: PropTypes.func.isRequired,\n};\n\nexport default Welcome;\n","import React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport { version } from '../package.json';\nimport GeoMap from './components/GeoMap';\nimport Loader from './components/Loader';\nimport Welcome from './components/Welcome';\n\nconst PARIS_CENTER = {\n  lat: 48.8534,\n  lng: 2.3488,\n};\n\nconst useStyles = createUseStyles({\n  container: {\n    position: 'relative',\n  },\n  version: {\n    bottom: 10,\n    fontSize: '0.6rem',\n    left: 10,\n    // opacity: 0.45,\n    position: 'absolute',\n    zIndex: 100000000,\n  },\n});\n\nconst getLatLng = position => {\n  if (\n    !position ||\n    !position.coords ||\n    !position.coords.latitude ||\n    !position.coords.longitude\n  ) {\n    return PARIS_CENTER;\n  }\n  const { latitude, longitude } = position.coords;\n  const next = { lat: latitude, lng: longitude };\n  return next;\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [mapCenter, setMapCenter] = useState(null);\n  const [isClicked, setIsClicked] = useState(false);\n  return (\n    <div classes={classes.container} id=\"app-container\">\n      <div className={classes.version}>\n        <small>v{version}</small>\n      </div>\n      {isClicked && !mapCenter && <Loader />}\n      {isClicked && mapCenter && <GeoMap center={mapCenter} />}\n      {!isClicked && !mapCenter && (\n        <Welcome\n          onClickHandler={useGeoloc => {\n            setIsClicked(true);\n            try {\n              if (!useGeoloc || !navigator.geolocation) {\n                setMapCenter(PARIS_CENTER);\n              } else {\n                const opts = { enableHighAccuracy: false, timeout: 5000 };\n                navigator.geolocation.getCurrentPosition(\n                  position => setMapCenter(getLatLng(position)),\n                  () => setMapCenter(PARIS_CENTER),\n                  opts\n                );\n              }\n            } catch (err) {\n              setMapCenter(PARIS_CENTER);\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import './css/index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { version } from '../package.json';\nimport App from './App';\n\n// eslint-disable-next-line\nconsole.log('Version : v', version);\n\nReactDOM.render(\n  // eslint-disable-next-line\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}